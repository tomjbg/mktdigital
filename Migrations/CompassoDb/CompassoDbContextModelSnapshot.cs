// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using compasso.Data;

namespace compasso.Migrations.CompassoDb
{
    [DbContext(typeof(CompassoDbContext))]
    partial class CompassoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("compasso.Models.Imagem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Data64");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("compasso.Models.Portifolios.Portifolio", b =>
                {
                    b.Property<int>("PortifolioId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bool")
                        .HasDefaultValue(true);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Link")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("PortifolioId");

                    b.ToTable("Portifolio");
                });

            modelBuilder.Entity("compasso.Models.Servicos.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bool")
                        .HasDefaultValue(true);

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DescricaoLonga")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(250);

                    b.Property<string>("UrlVideo")
                        .HasColumnType("varchar(1024)");

                    b.HasKey("ServicoId");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("compasso.Models.TabelaDeJuncao.ServicoPortifolio", b =>
                {
                    b.Property<int>("ServicoId");

                    b.Property<int>("PortifolioId");

                    b.HasKey("ServicoId", "PortifolioId");

                    b.HasIndex("PortifolioId");

                    b.ToTable("ServicoPortifolio");
                });

            modelBuilder.Entity("compasso.Models.Vantagem", b =>
                {
                    b.Property<int>("VantagemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("ServicoId");

                    b.HasKey("VantagemId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Vantagem");
                });

            modelBuilder.Entity("compasso.Models.Imagem", b =>
                {
                    b.HasOne("compasso.Models.Servicos.Servico", "Servico")
                        .WithOne("Imagem")
                        .HasForeignKey("compasso.Models.Imagem", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("compasso.Models.TabelaDeJuncao.ServicoPortifolio", b =>
                {
                    b.HasOne("compasso.Models.Portifolios.Portifolio", "Portifolio")
                        .WithMany("ServicoPortifolios")
                        .HasForeignKey("PortifolioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("compasso.Models.Servicos.Servico", "Servico")
                        .WithMany("ServicoPortifolios")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("compasso.Models.Vantagem", b =>
                {
                    b.HasOne("compasso.Models.Servicos.Servico", "Servico")
                        .WithMany("ListaVantagens")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
